@{
    ViewData["Title"] = "Log Progress";
    var workout = ViewBag.Workout as hyperTROPHYbuddy.Models.Workout;
    var exercises = ViewBag.Exercises as List<hyperTROPHYbuddy.Models.Exercise>;
}

<h2>Log Progress for @workout?.Name</h2>

<!-- Validation summary for server-side errors -->
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<form asp-action="Create" method="post">
    <input type="hidden" name="workoutId" value="@workout?.WorkoutId" />
    <div id="exercises-container">
        @for (int i = 0; i < exercises.Count; i++)
        {
            var exercise = exercises[i];
            <div class="card mb-4" data-exercise-index="@i">
                <div class="card-header">
                    <strong>@exercise.Name</strong>
                </div>
                <div class="card-body">
                    <table class="table mb-0" id="sets-table-@i">
                        <thead>
                            <tr>
                                <th>Set #</th>
                                <th>Reps <span class="text-danger">*</span></th>
                                <th>Weight <span class="text-danger">*</span></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    1
                                    <input type="hidden" name="logs[@i][0].ExerciseId" value="@exercise.ExerciseId" />
                                    <input type="hidden" name="logs[@i][0].SetNumber" value="1" />
                                </td>
                                <td>
                                    <input type="number" name="logs[@i][0].Reps" class="form-control" min="0" required />
                                    <span class="text-danger field-validation-valid" data-valmsg-for="logs[@i][0].Reps" data-valmsg-replace="true"></span>
                                </td>
                                <td>
                                    <input type="number" name="logs[@i][0].Weight" class="form-control" min="0" step="0.1" required />
                                    <span class="text-danger field-validation-valid" data-valmsg-for="logs[@i][0].Weight" data-valmsg-replace="true"></span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <button type="button" class="btn btn-secondary btn-sm mt-2 add-set-btn" data-exercise-index="@i" data-exercise-id="@exercise.ExerciseId">Add 1 more set</button>
                </div>
            </div>
        }
    </div>
    <div class="d-flex gap-2">
        <button type="submit" class="btn btn-primary">Save Log</button>
        <a asp-controller="WorkoutPlanAssignments" asp-action="MyPlan" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.add-set-btn').forEach(function (btn) {
                btn.addEventListener('click', function () {
                    var exerciseIndex = btn.getAttribute('data-exercise-index');
                    var exerciseId = btn.getAttribute('data-exercise-id');
                    var table = document.getElementById('sets-table-' + exerciseIndex).getElementsByTagName('tbody')[0];
                    var currentRows = table.getElementsByTagName('tr').length;
                    if (currentRows >= 5) {
                        btn.disabled = true;
                        // Optionally show a message to the user
                        if (!btn.nextElementSibling || !btn.nextElementSibling.classList.contains('set-limit-msg')) {
                            var msg = document.createElement('div');
                            msg.className = 'text-danger set-limit-msg';
                            msg.innerText = 'Maximum 5 sets allowed per exercise.';
                            btn.parentNode.appendChild(msg);
                        }
                        return;
                    }
                    var setNumber = currentRows + 1;
                    var row = document.createElement('tr');
                    row.innerHTML =
                        '<td>' + setNumber +
                        '<input type="hidden" name="logs[' + exerciseIndex + '][' + (setNumber - 1) + '].ExerciseId" value="' + exerciseId + '" />' +
                        '<input type="hidden" name="logs[' + exerciseIndex + '][' + (setNumber - 1) + '].SetNumber" value="' + setNumber + '" />' +
                        '</td>' +
                        '<td><input type="number" name="logs[' + exerciseIndex + '][' + (setNumber - 1) + '].Reps" class="form-control" min="0" required />' +
                        '<span class="text-danger field-validation-valid" data-valmsg-for="logs[' + exerciseIndex + '][' + (setNumber - 1) + '].Reps" data-valmsg-replace="true"></span></td>' +
                        '<td><input type="number" name="logs[' + exerciseIndex + '][' + (setNumber - 1) + '].Weight" class="form-control" min="0" step="0.1" required />' +
                        '<span class="text-danger field-validation-valid" data-valmsg-for="logs[' + exerciseIndex + '][' + (setNumber - 1) + '].Weight" data-valmsg-replace="true"></span></td>' +
                        ' <button type="button" class="btn btn-danger btn-sm remove-set-btn ms-2" title="Remove this set">&times;</button></td>';

                    table.appendChild(row);

                    // Attach remove event to the new button
                    row.querySelector('.remove-set-btn').addEventListener('click', function () {
                        row.remove();
                        // Enable the add button if it was disabled
                        btn.disabled = false;
                        // Remove set limit message if present
                        var msg = btn.parentNode.querySelector('.set-limit-msg');
                        if (msg) msg.remove();
                        // Re-number remaining set rows
                        Array.from(table.getElementsByTagName('tr')).forEach(function (tr, idx) {
                            var setNum = idx + 1;
                            tr.querySelector('td').childNodes[0].nodeValue = setNum;
                            tr.querySelector('input[name*=".SetNumber"]').value = setNum;
                        });
                    });

                    // Disable button if max sets reached
                    if (setNumber === 5) {
                        btn.disabled = true;
                        if (!btn.nextElementSibling || !btn.nextElementSibling.classList.contains('set-limit-msg')) {
                            var msg = document.createElement('div');
                            msg.className = 'text-danger set-limit-msg';
                            msg.innerText = 'Maximum 5 sets allowed per exercise.';
                            btn.parentNode.appendChild(msg);
                        }
                    }
                });

                // On load, disable button if already at max sets (should only be 1, but for safety)
                var exerciseIndex = btn.getAttribute('data-exercise-index');
                var table = document.getElementById('sets-table-' + exerciseIndex).getElementsByTagName('tbody')[0];
                if (table.getElementsByTagName('tr').length >= 5) {
                    btn.disabled = true;
                    if (!btn.nextElementSibling || !btn.nextElementSibling.classList.contains('set-limit-msg')) {
                        var msg = document.createElement('div');
                        msg.className = 'text-danger set-limit-msg';
                        msg.innerText = 'Maximum 5 sets allowed per exercise.';
                        btn.parentNode.appendChild(msg);
                    }
                }
            });
        });
    </script>
}