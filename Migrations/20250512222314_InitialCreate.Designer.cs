// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hyperTROPHYbuddy.Data;

#nullable disable

namespace hyperTROPHYbuddy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250512222314_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hyperTROPHYbuddy.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.SetLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("SetNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WorkoutLogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutLogId");

                    b.ToTable("SetLogs");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.UserWorkoutPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("UserWorkoutPlans");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutExercises");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserWorkoutPlanId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserWorkoutPlanId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutLogs");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutPlanTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutPlanTypeId");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutPlanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkoutPlanTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Weight Loss"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hypertrophy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HIIT"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Powerlifting"
                        });
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutPlanWorkout", b =>
                {
                    b.Property<int>("WorkoutPlanId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutPlanId", "WorkoutId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutPlanWorkouts");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.SetLog", b =>
                {
                    b.HasOne("hyperTROPHYbuddy.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hyperTROPHYbuddy.Models.WorkoutLog", "WorkoutLog")
                        .WithMany("SetLogs")
                        .HasForeignKey("WorkoutLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutLog");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.UserWorkoutPlan", b =>
                {
                    b.HasOne("hyperTROPHYbuddy.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany("UserWorkoutPlans")
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutExercise", b =>
                {
                    b.HasOne("hyperTROPHYbuddy.Models.Exercise", "Exercise")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hyperTROPHYbuddy.Models.Workout", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutLog", b =>
                {
                    b.HasOne("hyperTROPHYbuddy.Models.UserWorkoutPlan", "UserWorkoutPlan")
                        .WithMany("WorkoutLogs")
                        .HasForeignKey("UserWorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hyperTROPHYbuddy.Models.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserWorkoutPlan");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutPlan", b =>
                {
                    b.HasOne("hyperTROPHYbuddy.Models.WorkoutPlanType", "WorkoutPlanType")
                        .WithMany("WorkoutPlans")
                        .HasForeignKey("WorkoutPlanTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutPlanType");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutPlanWorkout", b =>
                {
                    b.HasOne("hyperTROPHYbuddy.Models.Workout", "Workout")
                        .WithMany("WorkoutPlanWorkouts")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hyperTROPHYbuddy.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany("WorkoutPlanWorkouts")
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.Exercise", b =>
                {
                    b.Navigation("WorkoutExercises");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.UserWorkoutPlan", b =>
                {
                    b.Navigation("WorkoutLogs");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.Workout", b =>
                {
                    b.Navigation("WorkoutExercises");

                    b.Navigation("WorkoutPlanWorkouts");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutLog", b =>
                {
                    b.Navigation("SetLogs");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutPlan", b =>
                {
                    b.Navigation("UserWorkoutPlans");

                    b.Navigation("WorkoutPlanWorkouts");
                });

            modelBuilder.Entity("hyperTROPHYbuddy.Models.WorkoutPlanType", b =>
                {
                    b.Navigation("WorkoutPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
